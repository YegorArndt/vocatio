generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Currency {
  USD
  EUR
  GBP
  CAD
  AUD
  RUB
  UAH
  BYN
}

enum SourceName {
  LINKEDIN
  INDEED
  GLASSDOOR
  HH
}

 
 

enum ProfessionField {
  FRONTEND
  BACKEND
  FULLSTACK
  SECURITY
  PROJECT_MANAGER
  PRODUCT_MANAGER
  DATA_SCIENTIST
  DEVOPS
  UI_UX_DESIGNER
  SYSTEM_ADMINISTRATOR
  DATABASE_ADMINISTRATOR
  MOBILE_DEVELOPER
  EMBEDDED_DEVELOPER
  QA
  NETWORK_ENGINEER
  CLOUD_ENGINEER
  MACHINE_LEARNING_ENGINEER
  ANALYST
  SCRUM_MASTER
}

 

model ContactEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  value     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model LanguageEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  value     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model SkillEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  value     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model EducationEntry {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  place       String
  period      String
  description String
  image       String
  title       String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

 
model ExperienceEntry {
  id                  String   @id @default(uuid())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  place               String
  period              String
  description         String
  bullets             String[]  
  skills              String[]
  image               String
  title               String
  user                User     @relation(fields: [userId], references: [id])
  userId              String
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name                String
  image               String
  jobTitle            String?
  linkedinId          String?
  email               String?
  professionalSummary String?

  professionField ProfessionField?

  languages LanguageEntry[]
  skills    SkillEntry[]
  contact   ContactEntry[]

  education  EducationEntry[]
  experience ExperienceEntry[]

  vacancies Vacancy[]
  cvs       Cv[]
}

model Vacancy {
  id              String           @id @default(uuid())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  image           String?
  companyName     String?
  location        String?
  country         String?
  age             DateTime?
  numApplicants   String?
  
  salary       String?
  isAnnualSalary  Boolean?         @default(false)
  salaryCurrency  Currency?        @default(USD)

  jobTitle        String?
  professionField ProfessionField?

  summary          String?  @db.Text
  description      String?  @db.Text
  requiredSkills   String[]
  responsibilities String[]

  group String?

  requiredRemote    String?
  requiredSeniority String?
  employmentType    String?
  requiredYearsMin  String?
  requiredYearsMax  String?
  requiredEducation String?
  requiredLanguages String[]

  sourceUrl  String?
  sourceName String?

  user   User   @relation(fields: [userId], references: [id])
  userId String
  cvs    Cv[]
}

model Cv {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  a4           String
  sections     Json
  intrinsic    Json
  image        String
  pokemonImage String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  vacancyId String
  vacancy   Vacancy @relation(fields: [vacancyId], references: [id])
}
